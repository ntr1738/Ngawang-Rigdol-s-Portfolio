{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ntr1738/Ngawang-Rigdol-s-Portfolio/blob/main/Linear_%26_Binary_Search_Algorithms\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "num = range(50)\n",
        "key = random.choice(num)\n",
        "num_queries = 0\n",
        "\n",
        "for idx in num:\n",
        "    num_queries = num_queries + 1\n",
        "    if idx == key:\n",
        "        print('Key is: ' + str(key))\n",
        "        print('Number of queries: ' + str(num_queries))\n",
        "        break\n",
        "    else:\n",
        "        print('Query ' + str(num_queries) + ': not found')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sf3CZHjZYSTC",
        "outputId": "69631283-8b67-4def-b582-47f18b2a9092"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Query 1: not found\n",
            "Query 2: not found\n",
            "Query 3: not found\n",
            "Query 4: not found\n",
            "Query 5: not found\n",
            "Query 6: not found\n",
            "Query 7: not found\n",
            "Query 8: not found\n",
            "Query 9: not found\n",
            "Query 10: not found\n",
            "Query 11: not found\n",
            "Key is: 11\n",
            "Number of queries: 12\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def binary_search(arr, target):\n",
        "    left = 0\n",
        "    right = len(arr) - 1\n",
        "\n",
        "    while left <= right:\n",
        "        mid = (left + right) // 2\n",
        "        if arr[mid] == target:\n",
        "            return mid\n",
        "        elif arr[mid] < target:\n",
        "            left = mid + 1\n",
        "        else:\n",
        "            right = mid - 1\n",
        "\n",
        "    return -1\n",
        "\n",
        "print('Target is in index : ' + str(binary_search([100,200,300,400,500,600,700], 600)))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tZO_2ZMHYry1",
        "outputId": "40d0fc39-828f-4f5e-80f8-9162a6f0c94b"
      },
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Target is in index : 5\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}